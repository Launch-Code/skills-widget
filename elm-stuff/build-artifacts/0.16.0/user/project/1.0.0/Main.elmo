Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm);
   var _op = {};
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "PositionCategoryClicked": var newCc = A3($List.foldr,
           F2(function (pc,ccs) {    return A2($List.append,pc.cc,ccs);}),
           _U.list([]),
           A2($List.filter,function (pc) {    return pc.isOn;},model.pc));
           var newPc = A2($List.map,function (i) {    return _U.eq(i.id,_p0._0) ? _U.update(i,{isOn: $Basics.not(i.isOn)}) : i;},model.pc);
           return _U.update(model,{pc: newPc,cc: newCc});
         case "CoreCompetencyClicked": return model;
         default: return model;}
   });
   var SkillClicked = function (a) {    return {ctor: "SkillClicked",_0: a};};
   var CoreCompetencyClicked = function (a) {    return {ctor: "CoreCompetencyClicked",_0: a};};
   var PositionCategoryClicked = function (a) {    return {ctor: "PositionCategoryClicked",_0: a};};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("skill-widget")]),
      _U.list([A2($Html.div,
              _U.list([$Html$Attributes.id("position-category-container")]),
              A2($List._op["::"],
              A2($Html.p,_U.list([]),_U.list([$Html.text("Position Categories")])),
              A2($List.map,
              function (i) {
                 return A2($Html.span,
                 _U.list([$Html$Attributes.$class("position-category"),A2($Html$Events.onClick,address,PositionCategoryClicked(i.id))]),
                 _U.list([$Html.text($Basics.toString(i.name))]));
              },
              model.pc)))
              ,A2($Html.div,
              _U.list([$Html$Attributes.id("core-competency-container")]),
              A2($List.map,
              function (i) {
                 return A2($Html.span,
                 _U.list([$Html$Attributes.$class("core-competency"),A2($Html$Events.onClick,address,CoreCompetencyClicked(i.id))]),
                 _U.list([$Html.text(i.name)]));
              },
              model.cc))
              ,A2($Html.div,
              _U.list([$Html$Attributes.id("skill-container")]),
              A2($List.map,
              function (i) {
                 return A2($Html.span,
                 _U.list([$Html$Attributes.$class("skill"),A2($Html$Events.onClick,address,SkillClicked(i.id))]),
                 _U.list([$Html.text(i.name)]));
              },
              model.ss))]));
   });
   var model = {pc: _U.list([{isOn: true,name: "pos cat 1",id: 1,cc: _U.list([{isOn: true,name: "core comp 1",id: 1,ss: _U.list([])}]),ss: _U.list([])}
                            ,{isOn: false,name: "pos cat 2",id: 2,cc: _U.list([]),ss: _U.list([])}])
               ,cc: _U.list([])
               ,ss: _U.list([])};
   var SS = F3(function (a,b,c) {    return {isOn: a,name: b,id: c};});
   var CC = F4(function (a,b,c,d) {    return {isOn: a,name: b,id: c,ss: d};});
   var PC = F5(function (a,b,c,d,e) {    return {isOn: a,name: b,id: c,cc: d,ss: e};});
   var Model = F3(function (a,b,c) {    return {pc: a,cc: b,ss: c};});
   var main = $StartApp$Simple.start({model: model,view: view,update: update});
   return _elm.Main.values = {_op: _op
                             ,main: main
                             ,Model: Model
                             ,PC: PC
                             ,CC: CC
                             ,SS: SS
                             ,model: model
                             ,view: view
                             ,PositionCategoryClicked: PositionCategoryClicked
                             ,CoreCompetencyClicked: CoreCompetencyClicked
                             ,SkillClicked: SkillClicked
                             ,update: update};
};